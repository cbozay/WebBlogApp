// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebBlogApp.Data.Context;

#nullable disable

namespace WebBlogApp.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240225113843_mig_3")]
    partial class mig_3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebBlogApp.Entity.Entities.Article", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ImageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ViewCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ImageId");

                    b.ToTable("Articles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b91f94eb-b9af-4a37-a0d3-b18b24c3eabe"),
                            CategoryId = new Guid("d8dbf00c-7769-4cf8-9756-2d72c96bc201"),
                            Content = "Asp.netCore deneme titleAsp.netCore deneme titleAsp.netCore deneme title",
                            CreatedBy = "Admin test",
                            CreatedDate = new DateTime(2024, 2, 25, 14, 38, 43, 366, DateTimeKind.Local).AddTicks(1466),
                            ImageId = new Guid("eff96bac-314d-4631-aed3-46961b5089d9"),
                            IsDeleted = false,
                            Title = "Asp.netCore deneme title",
                            ViewCount = 15
                        },
                        new
                        {
                            Id = new Guid("c914983e-e9fd-44de-a7ae-a842e65fec04"),
                            CategoryId = new Guid("b47b6b64-ed3e-433b-b25e-d8c4b4f57ba1"),
                            Content = "Asp.netCore deneme titleAsp.netCore deneme titleAsp.netCore deneme title1",
                            CreatedBy = "Admin test",
                            CreatedDate = new DateTime(2024, 2, 25, 14, 38, 43, 366, DateTimeKind.Local).AddTicks(1485),
                            ImageId = new Guid("43c77e23-7230-45cb-9c3c-ecd240f0a90c"),
                            IsDeleted = false,
                            Title = "Asp.netCore deneme title1",
                            ViewCount = 10
                        });
                });

            modelBuilder.Entity("WebBlogApp.Entity.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d8dbf00c-7769-4cf8-9756-2d72c96bc201"),
                            CreatedBy = "Admin Cat",
                            CreatedDate = new DateTime(2024, 2, 25, 14, 38, 43, 366, DateTimeKind.Local).AddTicks(2664),
                            IsDeleted = false,
                            Name = "CategoryNameDeneme"
                        },
                        new
                        {
                            Id = new Guid("b47b6b64-ed3e-433b-b25e-d8c4b4f57ba1"),
                            CreatedBy = "Admin Cat1",
                            CreatedDate = new DateTime(2024, 2, 25, 14, 38, 43, 366, DateTimeKind.Local).AddTicks(2668),
                            IsDeleted = false,
                            Name = "CategoryNameDeneme1"
                        });
                });

            modelBuilder.Entity("WebBlogApp.Entity.Entities.Image", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Images");

                    b.HasData(
                        new
                        {
                            Id = new Guid("eff96bac-314d-4631-aed3-46961b5089d9"),
                            CreatedBy = "Adimn",
                            CreatedDate = new DateTime(2024, 2, 25, 14, 38, 43, 366, DateTimeKind.Local).AddTicks(3368),
                            FileName = "CategoryImage",
                            FileType = "jpg",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("43c77e23-7230-45cb-9c3c-ecd240f0a90c"),
                            CreatedBy = "Adimn1",
                            CreatedDate = new DateTime(2024, 2, 25, 14, 38, 43, 366, DateTimeKind.Local).AddTicks(3372),
                            FileName = "CategoryImage1",
                            FileType = "jpg",
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("WebBlogApp.Entity.Entities.Article", b =>
                {
                    b.HasOne("WebBlogApp.Entity.Entities.Category", "Category")
                        .WithMany("Articles")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebBlogApp.Entity.Entities.Image", "Image")
                        .WithMany("Articles")
                        .HasForeignKey("ImageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Image");
                });

            modelBuilder.Entity("WebBlogApp.Entity.Entities.Category", b =>
                {
                    b.Navigation("Articles");
                });

            modelBuilder.Entity("WebBlogApp.Entity.Entities.Image", b =>
                {
                    b.Navigation("Articles");
                });
#pragma warning restore 612, 618
        }
    }
}
